// SPDX-License-Identifier: BSD-3-Clause
//
// Copyright 2020 Raritan Inc. All rights reserved.
//
// This file was generated by IdlC from Net.idl.

using System;
using System.Linq;
using LightJson;
using Com.Raritan.Idl;
using Com.Raritan.JsonRpc;
using Com.Raritan.Util;

#pragma warning disable 0108, 0219, 0414, 1591

namespace Com.Raritan.JsonRpc.net {
  public class LinkStateChangedEvent_ValObjCodec : Com.Raritan.JsonRpc.idl.Event_ValObjCodec {

    public static new void Register() {
      ValueObjectCodec.RegisterCodec(Com.Raritan.Idl.net.LinkStateChangedEvent.typeInfo, new LinkStateChangedEvent_ValObjCodec());
    }

    public override void EncodeValObj(LightJson.JsonObject json, ValueObject vo) {
      base.EncodeValObj(json, vo);
      var inst = (Com.Raritan.Idl.net.LinkStateChangedEvent)vo;
      json["ifName"] = inst.ifName;
      json["ifLabel"] = inst.ifLabel;
      json["ifType"] = (int)inst.ifType;
      json["ifState"] = (int)inst.ifState;
    }

    public override ValueObject DecodeValObj(ValueObject vo, LightJson.JsonObject json, Agent agent) {
      Com.Raritan.Idl.net.LinkStateChangedEvent inst;
      if (vo == null) {
        inst = new Com.Raritan.Idl.net.LinkStateChangedEvent();
      } else {
        inst = (Com.Raritan.Idl.net.LinkStateChangedEvent)vo;
      }
      base.DecodeValObj(vo, json, agent);
      inst.ifName = (string)json["ifName"];
      inst.ifLabel = (string)json["ifLabel"];
      inst.ifType = (Com.Raritan.Idl.net.InterfaceType)(int)json["ifType"];
      inst.ifState = (Com.Raritan.Idl.net.InterfaceOpState)(int)json["ifState"];
      return inst;
    }

  }
}
